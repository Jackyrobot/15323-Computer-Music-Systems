%!PS-Adobe-3.0
%%Title: (midterm/q)
%%Creator: (QuarkXPress\252: LaserWriter 8 8.2.2)
%%CreationDate: (5:27 PM Tuesday, February 27, 1996)
%%For: (dnj)
%%Pages: 14
%%DocumentFonts: Palatino-Roman Palatino-Bold Palatino-Italic
%%DocumentNeededFonts: Palatino-Roman Palatino-Bold Palatino-Italic
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%ADO_ImageableArea: 12 12 600 780
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(midterm/q)def
/Creator(QuarkXPress\252: LaserWriter 8 8.2.2)def
/CreationDate(5:27 PM Tuesday, February 27, 1996)def
/For(dnj)def
/Pages 1 def
end def end
/md 136 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_errorhandler
%%Copyright: Copyright 1985-1993 Adobe Systems Incorporated. All Rights Reserved.
/currentpacking where
{pop/oldpack currentpacking def/setpacking where
{
pop false setpacking
}if
}if
/$brkpage 64 dict def $brkpage begin
/prnt
{dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
currentpoint/toy exch def/tox exch def 1 setgray newpath
tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
{dup length cp add rmargin gt{nl/cp 0 def}if
dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
{dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
}readonly def
/arraytype
{dup rcheck{dup xcheck
{({)tprint{typeprint}forall(})tprint}
{([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
}readonly def
/packedarraytype
{dup rcheck{dup xcheck
{({)tprint{typeprint}forall(})tprint}
{([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
}readonly def
/courier/Courier findfont 10 scalefont def
end
errordict/handleerror
{systemdict begin $error begin $brkpage begin newerror
{/newerror false store
vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
lmargin 720 moveto(ERROR: )prnt errorname prnt
nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{
$error/ostack get type dup/arraytype eq exch/packedarraytype eq or
{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
systemdict/showpage get exec(%%[ Error: )print
errorname =print(; OffendingCommand: )print/command
load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where
{pop/setpacking where
{
pop oldpack setpacking
}if
}if
%%EndFile
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_lwnames
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/fontstring(|______                                                  )def
/fontname{
currentdict/FontName known{
fontstring 0
currentdict/FontName get fontstring 7 50 getinterval{cvs}stopped{
pop pop pop pop/customfont
}{
length 7 add getinterval cvn
}ifelse
}{
/customfont
}ifelse
}bd
/copyfontdict Z
/rename{
copyfontdict fontname currentdict end definefont pop
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *PageSize Letter

    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
	setpagedevice
	2 dict
    dup /PageSize [612 792] put
    dup /ImagingBBox null put
    setpagedevice
%%EndFeature
}featurecleanup
(dnj)setjob
/mT[1 0 0 -1 12 780]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Palatino-Roman
%%IncludeFont: Palatino-Bold
%%IncludeFont: Palatino-Italic
/f0_1/Palatino-Roman
:mre
/f0_1 f0_1 1 scf
/f1_1/Palatino-Bold
:mre
/f1_1 f1_1 1 scf
/f2_1/Palatino-Italic
:mre
/f2_1 f2_1 1 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%DocumentProcSets: QuarkXPress_3.31 1.0 5
%%DocumentSuppliedProcSets: QuarkXPress_3.31 1.0 5
%%BeginProcSet: QuarkXPress_3.31 1.0 5
userdict begin
/bu where{pop}{/xpbumtx matrix def/bu{xpbumtx currentmatrix aload pop
 /pm where{pop pm restore}if xpbumtx astore setmatrix}bind store}ifelse
/bn where{pop}{/bn{/pm save def}bind store}ifelse
/xps2ps{begin/ss X/psy X/psx X mtx1 astore pop rvars}bind def end
/QuarkXPress_3.31 userdict exch 394 dict dup begin put
/vmreclaim where{begin -2 vmreclaim end}if
/setpacking where/pkng exch def
pkng{pop/savepacking currentpacking def true setpacking}if
/T true def
/F false def
/B{bind def}bind def
/X{exch def}B
/m/moveto load def
/rm/rmoveto load def
/l/lineto load def
/rl/rlineto load def
/np/newpath load def
/cp/closepath load def
/z/setmatrix load def
/t/translate load def
/S/scale load def
/g/gsave load def
/G/grestore load def
/H/setgray load def
/R/setrgbcolor load def
/v/fill load def
/V/eofill load def
/u/clip load def
/U/eoclip load def
/n/stroke load def
/o/setlinewidth load def
/a/setlinecap load def
/b/setlinejoin load def
/p/setdash load def
/M/show load def
/N/ashow load def
/Q/awidthshow load def
/Y/widthshow load def
/cps{{currentpoint}stopped}B
/epS{/us save def countdictstack mark}B
/epR{cleartomark countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse us restore}B
/mif{{}{m}ifelse}B
/mrl{g np m rl n G}B
/L{g np m l n G}B
/qA .166667 def
/qB .833333 def
/qC .5 def
/imx matrix def
/mtx matrix def
/mtx1 matrix def
/mx0 matrix def
/mx1 matrix def
/mx2 matrix def
/mx3 matrix def
/2t 2 array def
/2a[0 0]def
/6a 6 array def
/p2{pop pop}B
/p3{pop pop pop}B
/p4{pop pop pop pop}B
/R0{mx1 astore concat}B
/R1{mx0 currentmatrix pop R0}B
/R2{mx3 currentmatrix pop R0}B
/epnul{
 28{0}repeat
 /a X/b X/C X/g X/G X/H X/l X/m X/M X/n X/N X/o X
 /p X/Q X/R X/S X/t X/u X/U X/v X/V X/w X/Y X/z X
 /cp X/np X/rl X/rm X}B
/findfont[/findfont load{stopped{pop/Courier findfont}if}aload pop]cvx B
/sp0{{abs exch abs 2 copy add 1 gt{1. sub dup mul exch 1. sub dup mul add 1. sub}
 {dup mul exch dup mul add 1. exch sub}ifelse}}B
/sp1{{exch pop abs 1. exch sub}}B
/sp2{{dup mul exch dup mul .4 mul add 1. exch sub}}B
/sp3{{abs exch abs 2 copy gt{exch}if pop}}B
/sp8{exch 3. div exch{2{1. add 1.5 mul dup floor sub 2. mul 1. sub exch}repeat
 abs exch abs 2 copy add 1 gt{1. sub dup mul exch 1. sub dup mul add 1. sub}
 {dup mul exch dup mul add 1. exch sub}ifelse}}B
/sp4{{1. add 4. mul cvi 8 mul exch 1. add 4. mul cvi add
 (\177_wW}]uUOoGgMmEesS{[qQyYCcKkAaIi|\\tT~^vVLlDdNnFfpPxXrRzZ@`HhBbJj)
 exch get 128 div}}B
/mv where{pop}{/mv 256 array def
mv 0 /Helvetica findfont /Encoding get 0 128 getinterval putinterval
mv dup 39/quotesingle put 96/grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
mv 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave
/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex
/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex
/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling
/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis
/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff
/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown
/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright
/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency
/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase
/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute
/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut
/ogonek/caron
mv 128 128 getinterval astore pop}ifelse
statusdict begin version cvr 47.0 ge end
{/w /stringwidth load def}
{/w{g np 0 0 0 0 m l cp u stringwidth G}B}ifelse
/smc{m dup M}B
/sos{s75 cvs dup 1 79 put cvn}B
/sss{s75 cvs dup 2 83 put cvn}B
/sbs{s75 cvs dup 3 66 put cvn}B
/sts{tpamt 0 ne{str cvs dup 4 84 put length dup tpamt s75 cvs dup length
 str 4 -2 roll putinterval add str 0 3 -1 roll getinterval cvn}if}B
/Z{/psy X/psx X curf
 psx 0 psx usangl{.212557 mul}{pop 0}ifelse psy neg 0 0 fmtx astore makefont setfont}B
/f{/psy X/psx X far exch get aload pop dup 1 and 0 ne/usangl X 2 and 0 ne/doss X dup/curf X
 psx 0 psx usangl{.212557 mul}{pop 0}ifelse psy neg 0 0 fmtx astore makefont setfont}B
/cf{{1 index/FID ne 2 index/UniqueID ne and{def}{p2}ifelse}forall}B
/stlf{FontDirectory 2 index known{exch findfont}{3 -1 roll newmm}ifelse
 3 1 roll p2}B
/shgr{chc 0 get 2 and 0 eq{100 45{dup mul exch dup mul add 1. exch sub}setscreen
 .8}{1}ifelse H}def
/setchc{chc exch 0 exch put}B
/chkch{currentfont dup/Encoding 2 copy known{get 2 index 0 get get dup/.notdef ne
 {exch/CharStrings 2 copy known{get exch known not}{p3 T}ifelse}
 {p2 T}ifelse}{p3 T}ifelse}B
/xpsh{doss ss and{sym fmtx makefont/xpfs X
 {s1 0 3 -1 roll put
 s1 chkch{g xpfs setfont M cps G mif}
 {M}ifelse}forall}{M}ifelse}B
/xpash{doss ss and{sym fmtx makefont/xpfs X
 {s1 0 3 -1 roll put 2 copy
 s1 chkch{g xpfs setfont N cps G mif}
 {N}ifelse}forall p2}{N}ifelse}B
/xpwsh{doss ss and{sym fmtx makefont/xpfs X
 {s1 0 3 -1 roll put 3 copy
 s1 chkch{g xpfs setfont Y cps G mif}
 {Y}ifelse}forall p3}{Y}ifelse}B
/xpawsh{doss ss and{sym fmtx makefont/xpfs X
 {s1 0 3 -1 roll put 5 copy
 s1 chkch{g xpfs setfont Q cps G mif}
 {Q}ifelse}forall p2 p3}{Q}ifelse}B
/d{dup doss ss and{sym fmtx makefont/xpfs X
 0 0 3 -1 roll{s1 0 3 -1 roll put
 s1 chkch{g xpfs setfont w G}
 {w}ifelse 3 -1 roll add 3 1 roll add exch}forall}
 {w}ifelse pop 3 -1 roll sub 3 -1 roll div
 3 -1 roll exch sub 0 32 3 -1 roll 0 5 -1 roll
 doss ss and{xpash p3}{Q}ifelse}B
/D{dup doss ss and{sym fmtx makefont/xpfs X
 0 0 3 -1 roll{s1 0 3 -1 roll put
 s1 chkch{g xpfs setfont w G}
 {w}ifelse 3 -1 roll add 3 1 roll add exch}forall}
 {w}ifelse pop 3 -1 roll exch sub 3 -1 roll div 0 3 -1 roll xpash}B
/ssh{2 copy g dup vtd{neg}if rm shgr xpsh pop G xpsh}B
/std{6 copy g dup vtd{neg}if rm shgr d pop G d}B
/strtp{dup length dup -8 bitshift ct2 ctz 3 -1 roll put 255 and
 ct2 ctz 1 add 3 -1 roll put ct2 copy pop setclp}B
/endp{ct2 ctz ct0 putinterval setclp}B
/kp{ct1 0 2 index length 2 index 99 2 index put getinterval copy cvx exec
 mtx1 currentmatrix pop cps np mif}B
/ptc{cmykprsnt{currentcmykcolor 4}{currentrgbcolor 3}ifelse
 -1 1{exch 255 mul cvi bkc 3 1 roll put}for}B
/gtc{1 1 cmykprsnt{4}{3}ifelse{bkc exch get 255. div}for
 cmykprsnt{setcmykcolor}{R}ifelse}B
/crntc{regsh 0 lt custprsnt not and
 {cmykprsnt{currentcmykcolor}{currentgray}ifelse}if
 custar aload pop pop custnamstr 79 get custsh custprsnt regsh
 }def
/setc{/regsh X/custprsnt X/custsh X custnamstr 0 3 -1 roll getinterval custar astore pop
 regsh 0 ge{regsh setseparationgray}{custprsnt{custar custsh setcustomcolor}
 {cmykprsnt{setcmykcolor}{H}ifelse}ifelse}ifelse
 }def
/h{currentpoint exch pop m}B
/ply{m{currentfile str readline pop cvr dup -32767 eq{pop exit}
 {currentfile str readline pop cvr l}ifelse}loop}B
/crs{g o np m l n np m l n G}B
/vtadj{dup/vtd X{90}{-90}ifelse rotate}B
/strpn{s75 cvs(|______)anchorsearch}B
/nwf{count 1 roll dup maxlength dict begin cf FontType 0 ne{nmv{Encoding dup
 length array copy/Encoding X counttomark 2 idiv{Encoding 3 1 roll put}repeat}
 {Encoding 65 26 getinterval 0 mv 65 26 getinterval{3 copy pop get ne{exit}if
 1 add}forall exch pop 26 eq{/Encoding mv def}if}ifelse}if currentdict end
 count -1 roll exch definefont pop}B
/dfnt{
 /doall X/tpamt X/fnam X dup/pln X{/plnfnam X}if dup/bit X{cvn/bitfnam X}if
 dup 2 and 0 ne/bf1 X 4 and 0 ne/usangl X/nmv X
 FontDirectory fnam known not{fnam strpn{pop cvn doall{dup FontDirectory exch known}{T}ifelse
 {findfont fnam nwf F}{pop T}ifelse}{pop doall}ifelse{bit{FontDirectory bitfnam known}
 {F}ifelse{/fnam bitfnam def}{pln{FontDirectory plnfnam known{/fnam plnfnam def F}
 {plnfnam strpn{pop cvn dup FontDirectory exch known{findfont plnfnam nwf/fnam plnfnam def F}
 {pop T}ifelse}{pop T}ifelse}ifelse}{T}ifelse{fnam strpn{pop cvn findfont fnam nwf}
 {pop}ifelse}if}ifelse}if}if
 nmv{cleartomark}if/sa X fnam findfont dup/fnt X/MFontType known
 not dup/nbm X{fnt/FontType get 0 eq{F}{fnt/PaintType 2 copy known
 {get 0 ne}{pop pop T}ifelse}ifelse}{T/usangl X T/bf1 X T}ifelse{/tpamt 0 def}if
 usangl sa 2 and 0 ne and/usangl X F/doss X
 sa 16 and 0 ne{fnt fnam sss sts 0 stlf}{sa 8 and 0 ne{fnt fnam sos sts 1 stlf}
 {sa 1 and 0 ne bf1 and{fnt fnam sbs sts 2 stlf}{tpamt 0 ne{fnt fnam sts 3 stlf}
 {nbm fnt/FontType get 0 ne and/doss X fnt}ifelse}ifelse}ifelse}ifelse
 [exch 0 usangl{1 add}if doss{2 add}if] far 3 1 roll put
}B
/t0{g s1 w 1 index 0 ne{3 1 roll add exch}{3 -1 roll pop}ifelse
 z4 z7 0 eq or z5 and nochdev not and{z7 0 eq nochp not and
 {mtx currentmatrix nulldevice z np 0 0 m s1 T charpath{flattenpath}stopped{F}
 {pathbbox 4 copy 3 -1 roll ne 3 1 roll ne and{T}{p4 F}ifelse}ifelse}{F}ifelse
 {T}{z4{z0 z1 z2 z3 T}{F}ifelse}ifelse}{F}ifelse G{10 -4 roll 4
 {5 -1 roll add 4 1 roll}repeat setcachedevice}{setcharwidth p4}ifelse}B
/t1{g np 0 0 m o F charpath n G}B
/newmm{dup/FontType get 0 eq
 {dup maxlength dict begin cf currentdict end dup/FDepVector 2 copy get
 [exch 6 index exch 6 index exch{newmm 3 1 roll}forall p2]put dup}
 {18 dict begin/FontMatrix[1 0 0 1 0 0]def/FontType 3 def
 /Encoding mv def/FontBBox[0 0 1 1]def/df 1 index def/df1 0 def
 1 index 0 ge{/StyleCode 2 index def/TrapWidth tpamt def}if
 df/FontMatrix get 6a copy mark df/FontBBox get aload pop counttomark 4 eq
 {5 -1 roll pop 4 index dtransform/z3 X/z2 X 3 -1 roll dtransform/z1 X/z0 X T}
 {cleartomark pop F}ifelse/z4 X
 1 index 0 ge{df/FontType get 3 ne}{F}ifelse/z5 X df/MFontType known not dup/z6 X
 {df/PaintType 2 copy known{get 0 eq{0}{1}ifelse}{pop pop 1}ifelse}{1}ifelse/z7 X
 /df1/q 6 dict begin/FontMatrix[1 0 0 1 0 0]def/FontType 3 def
 /Encoding mv def/FontBBox[0 0 1 1]def
 z7 0 eq{/BuildChar{pop begin xpwd begin df setfont
 d1 neg d1 neg d1 d1 0 t0 s1 d1 t1 end end}def}
 {/BuildChar{pop begin xpwd begin df setfont 0 0 d0 d0 0 t0
 s1 0 0 smc d0 0 smc d0 d0 smc 0 d0 m M end end}def}ifelse
 currentdict end definefont def
 /BuildChar{exch begin xpwd begin dup s1 0 3 -1 roll put z6 ss and
 {df/Encoding 2 copy known{get exch get dup/.notdef ne{df/CharStrings 2 copy known
 {get exch known not}{p3 T}ifelse}{pop T}ifelse}{p3 T}ifelse}{pop F}ifelse dup
 {symf begin xpwd begin}if bcar StyleCode 2 mul z7 add get exec{end end}if end end}def
 currentdict end}ifelse 3 index exch definefont exch pop}B
/c{currentrgbcolor dup 4 1 roll eq 3 1 roll eq and{bkc 0 get 0 eq
 {1 currentgray sub H}{gtc}ifelse}{1 H}ifelse}B
/bcar[
 {df setfont .05/d0 X
 TrapWidth .24 add psx div .012 2 copy lt{exch}if pop/d1 X 
 g s1 w G 1 index 0 ne{exch d0 add exch}if setcharwidth
 s1 g d0 .01 add d0 vtd not{neg}if t 0 0 smc g df1 setfont 0 0 smc G G
 g c 0 0 smc G df1 setfont 0 0 m M}

 {df setfont 1 psx div dup/d0 X 2. div dup/d3 X .05 add/d2 X
 g s1 w G 1 index 0 ne{exch d2 add exch}if setcharwidth
 s1 g d2 .01 add d2 vtd not{neg}if t 0 0 smc G
 g df1 setfont 0 0 smc G c d3 d3 m M}

 {df setfont TrapWidth .24 add psx div .012 2 copy lt{exch}if pop/d1 X
 g s1 w G setcharwidth g c s1 0 0 smc G df1 setfont 0 0 m M}

 {df setfont 1 psx div/d0 X
 g s1 w G 1 index 0 ne{exch d0 add exch}if setcharwidth
 g df1 setfont s1 0 0 smc G c d0 2. div dup m M}

 {df setfont .03/d0 X TrapWidth dup 0 lt
 {neg psx div 0 2 copy lt{exch}if pop neg}
 {psx div 0 2 copy lt{exch}if pop}ifelse .03 add/d1 X
 g s1 w G 1 index 0 ne{exch d0 add exch}if setcharwidth
 s1 d0 2 div dup m M d1 0 ne{d1 0 lt{d1 neg/d1 X gtc}if
 df1 setfont s1 d0 2 div dup m M}if}

 {df setfont .03/d0 X 0 0 d0 d0 d0 t0 
 s1 0 0 smc d0 0 smc d0 d0 smc 0 d0 m M}

 {df setfont
 TrapWidth dup 0 lt{neg}if psx div 0 2 copy lt{exch}if pop/d1 X
 TrapWidth 0 lt{g s1 w G setcharwidth s1 0 0 smc gtc df1 setfont}
 {d1 neg d1 neg d1 d1 0 t0 s1 dup d1 t1}ifelse 0 0 m M}

 {df setfont g s1 w G setcharwidth s1 0 0 m M}
] def
/mc{0 3 1 roll transform neg exch pop}B
/sgt{2 copy known{get T}{p2 F}ifelse}B
/kif{currentfont dup/FontMatrix get exch/FontInfo sgt{T}{currentfont/df sgt
  {dup/FontInfo sgt{3 1 roll/FontMatrix get mtx concatmatrix exch T}{p3 F}
  ifelse}{p2 F}ifelse}ifelse{3 -1 roll sgt{exch T}{pop F}ifelse}{F}ifelse}B
/ul{g/@1 X{90 rotate 1 -1 S}if/@2 X/@3 X/@4 X @3 0 lt{
 @1{/UnderlinePosition kif{mc neg ulpmax 0 ne{dup @3 div abs ulpmax gt
 {pop T}{F}ifelse}{F}ifelse}{T}ifelse}{T}ifelse{@3 -10 div}if
 @2 1 and 0 ne{@4 div}if
 @1{/UnderlineThickness kif{mc ultmax 0 ne{dup @3 div abs ultmax gt
 {pop T}{F}ifelse}{F}ifelse}{T}ifelse}{T}ifelse{@3 -15 div}if
 @2 1 and 0 ne{@4 div}if}{@3}ifelse abs
 @1{currentfont/TrapWidth sgt}{F}ifelse not{0}if
 dup dup 2. div dup dup 0 lt{pop 0}if/@1 X
 neg 5 -1 roll rm 3 -1 roll add dup 0 lt{pop 0}if o
 add dup 0 lt{pop 0}if currentpoint np m
 @2 16 and 0 ne{g @2 8 and 0 eq{shgr}if currentlinewidth 2. div dup
 rm dup 0 rl n G}if @2 8 and 0 ne dup
 {g gtc 1 index 0 rl n G}if
 {@1 sub @1 2. div 0 rm currentlinewidth @1 sub o
 currentpoint np currentlinewidth 2. div sub m dup 0 rl
 0 currentlinewidth @2 512 and 0 eq{rl}{rm}ifelse
 neg 0 rl @2 256 and 0 eq{0 currentlinewidth neg rl}if
 xpys @1 add o 2 a}{0 rl}ifelse n G}B
/strik{g []0 p o np m rl n G}B
/rv{/@2 X/@3 X/@4 X/@5 X/@6 X/@7 X cps np
  @6 @7 @3 90 @2 sub @2 arcn @4 @7 @3 180 @2 sub 90 @2 add arcn
  @4 @5 @3 270 @2 sub 180 @2 add arcn @6 @5 @3 360 @2 sub 270 @2 add arcn
  cp mif}B
/rs{/@2 X/@4 X/@5 X/@6 X/@7 X cps np
  @6 @2 add @7 m @4 @2 sub @7 l @4 @7 @2 add l @4 @5 @2 sub l
  @4 @2 sub @5 l @6 @2 add @5 l @6 @5 @2 sub l @6 @7 @2 add l
  cp mif}B
/dop{dup 6 le{vrb exch get exec}{pop}ifelse}B
/vrb[{fp{fg 0 get 0 ne{g n G}
 {g 1 o pnsh pnsv S n G}ifelse}if np}bind
 /eofill load dup/newpath load 1 index dup{u np}bind]def
/fp{pnsh 0 ne pnsv 0 ne and}B
/pen{pnm mul/pnsh X pnm mul/pnsv X pnsh o}B
/lin{fg 0 get 0 ne{l currentpoint 0 dop m}
 {currentpoint/@3 X/@4 X g np/@1 X/@2 X 
 fp{@4 @2 lt{@3 @1 ge{@4 @3 m @2 @1 l pnsh 0 rl
 0 pnsv rl @4 pnsh add @3 pnsv add l pnsh neg 0 rl}
 {@4 @3 m pnsh 0 rl @2 pnsh add @1 l 0 pnsv rl
 pnsh neg 0 rl @4 @3 pnsv add l}ifelse}{@3 @1 gt
 {@2 @1 m pnsh 0 rl @4 pnsh add @3 l 0 pnsv rl
 pnsh neg 0 rl @2 @1 pnsv add l}{@4 @3 m pnsh 0 rl
 0 pnsv rl @2 pnsh add @1 pnsv add l pnsh neg 0 rl
 0 pnsv neg rl}ifelse}ifelse cp v}if @2 @1 G m}ifelse}B
/rc{dup/@flag X{/@t X g}if cps dup{5 1}{7 3}ifelse roll np
 4 copy 4 2 roll exch m 6 -1 roll l l l cp @flag{@t dop G}if mif}B
/cmnrr{cps np
 @4 @6 add 2. div @7 m
 @4 @7 @4 @5 @2 arcto p4
 @4 @5 @6 @5 @2 arcto p4
 @6 @5 @6 @7 @2 arcto p4
 @6 @7 @4 @7 @2 arcto p4
 cp mif}B
/rr{/@1 X 2. div/@2 X pop/@4 X/@5 X/@6 X/@7 X
 @7 @5 eq @6 @4 eq or @2 pnsh 2 div le or @2 pnsv 2 div le or
 {@7 @6 @5 @4 @1 T rc}{@4 @6 sub abs 2. div dup @2 lt{/@2 X}{pop}ifelse
 @5 @7 sub abs 2. div dup @2 lt{/@2 X}{pop}ifelse
 @1 0 eq{@2 pnsh 2 div 2 copy gt{sub/@2 X}{p2}ifelse}if
 g cmnrr @1 dop G}ifelse}B
/rr1{/@2 X/@4 X/@5 X/@6 X/@7 X cmnrr}B
/qa{3 -1 roll add exch 3 -1 roll add exch}B
/qm{3 -1 roll 1 index mul 3 1 roll mul}B
/qs{3 -1 roll sub exch 3 -1 roll sub exch}B
/qp{6 copy 12 -2 roll p2}B
/qn{6a exch get mul}B
/qx{6a astore pop
 qA 0 qn qB 2 qn add   qA 1 qn qB 3 qn add
 qB 2 qn qA 4 qn add   qB 3 qn qA 5 qn add
 qC 2 qn qC 4 qn add   qC 3 qn qC 5 qn add}B
/bp{currentpoint np 2 copy m}B
/qi{{4 copy 2 copy 10 2 roll qa .5 qm np m}{2 copy 6 -2 roll 2 qm qs 4 2 roll}ifelse}B
/qc{qp qx curveto}B
/qq{{qc 6 -2 roll qx curveto}{4 copy qs qa qx curveto}ifelse}B
/ep{dup 0 eq{{m}{lin}{}{}pathforall pop}{dop}ifelse G currentpoint np m}B
/ef{ff{g V G}if}B
/ec{1 and 0 ne{0 dop}if G currentpoint np m}B
/eu{currentpoint fp{0 ep}{G np}ifelse m}B
/pt{currentpoint np m}B
/barc{/@flag X/@1 X/@3 X/@4 X @flag{/@2 X}if/@5 X
 /@6 X/@7 X/@8 X @flag{g}if cps mtx currentmatrix
 @5 @7 add 2 div @6 @8 add 2 div t np 0 0 m
 @5 @7 sub @6 @8 sub S @1{np}if
 0 0 .5 @4 @3 arc @4 @3 sub abs 360 ge{cp}if
 z mif @flag{@2 dop G}if}B
/ar{3 1 roll 2 index 0 eq T barc}B
/ov{0 360 T 4 -1 roll barc}B
/tc{32768 div add 3 1 roll 32768 div add 2t astore pop}B
/tp{2a astore pop}B
/tt{mx2 currentmatrix pop currentpoint 2 copy 
 2t aload pop qa 2 copy t 2a aload pop exch dup 0 eq
 {pop}{1 eq{-1 1}{1 -1}ifelse S}ifelse 
 rotate neg exch neg exch t m}B
/te{mx2 z}B
/px{tp tt}B
/dh{fg 0 1 put array astore dup{1 xpxs div mul exch}forall
 astore exch pop exch pop exch p}B
/rh{fg 0 0 put ih aload pop p}B
/lw{div/pnm X pnsv pnsh pen}B
/gr{64. div H}B
/sg{rstrscr gr}B
/pat{savscr sa8 copy pop patfr 0
 [{1 add 4 mul cvi}aload pop sa8
 {exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}aload pop]cvx setscreen gr}def
/cpat{savscr 7 -1 roll sa8 copy pop patfr 0
 [{1 add 4 mul cvi}aload pop sa8
 {exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}aload pop]cvx
 8 -1 roll sb8 copy pop patfr 0
 [{1 add 4 mul cvi}aload pop sb8
 {exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}aload pop]cvx
 9 -1 roll sc8 copy pop patfr 0
 [{1 add 4 mul cvi}aload pop sc8
 {exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}aload pop]cvx
 10 -1 roll sd8 copy pop patfr 0
 [{1 add 4 mul cvi}aload pop sd8
 {exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}aload pop]cvx
 setcolorscreen setcmykcolor}def
/savscr{ns not{/ns T def cmykprsnt
 {currentcolorscreen currentcolortransfer count 16 roll}
 {currentscreen ctf count 4 roll}ifelse st0}if}def
/rstrscr{ns{cmykprsnt{count -16 roll systemdict/setcolortransfer known
 {cstf}{stf p3}ifelse setcolorscreen}
 {count -4 roll stf setscreen}ifelse/ns F def}if}def
/setclp{np 0 0 m
 ct1 99 get 0 ne{ct1 0 ct1 99 get getinterval cvx exec}if
 ct2 ctz get 256 mul ct2 ctz 1 add get add dup 0 ne
 {dup ct2 0 3 -1 roll getinterval cvx exec}if pop cps np mif}B
/spcldr{dup doss ss and{sym fmtx makefont/xpfs X
 0 0 3 -1 roll{s1 0 3 -1 roll put
 s1 chkch{g xpfs setfont w G}
 {w}ifelse 3 -1 roll add 3 1 roll add exch}forall}
 {w}ifelse pop 3 -1 roll exch sub 3 -1 roll
 /numz 5 -1 roll def numz 10 mul add div numz 0 eq
 {0 0}{dup 10 mul 0}ifelse 32 4 -1 roll 0 6 -1 roll
 doss ss and{xpash p3}{Q}ifelse}B
/calcbnd{72 72 mtx defaultmatrix dtransform abs exch abs 2 copy lt{exch}if
 /devpxwd 72 3 -1 roll div def/languagelevel where{pop languagelevel}
 {1}ifelse 2 ge{pop 256}{/currentcolorscreen where
 {pop currentcolorscreen p2 3{3 index 2 copy lt{exch}if 5 1 roll p4}repeat}
 {currentscreen p2}ifelse div dup mul round cvi 15 add 16 idiv dup 1 lt{pop 1}if
 16 mul dup 256 gt{pop 256}if}ifelse minblnd 2 copy lt{exch}if pop/maxblnd X}B
/setsepval{dup -1 eq{pop aload pop setcmykcolor}
 {setcustomcolor}ifelse currentgray}B
/setcompval{dup -1 eq{pop aload pop}
 {exch aload p2 4{4 index mul 4 1 roll}repeat 5 -1 roll pop}ifelse}B
/blnd{dup/blmode X 2 eq{/k1 X/y1 X/m1 X/c1 X/k0 X/y0 X/m0 X/c0 X}{/k1 X/k0 X}ifelse
 k1 k0/@1 X/@2 X blmode 2 eq{@2 @1 sub abs c1 c0 sub abs 2 copy lt
 {exch c1 c0/@1 X/@2 X}if pop m1 m0 sub abs 2 copy lt
 {exch m1 m0/@1 X/@2 X}if pop y1 y0 sub abs lt{y1 y0/@1 X/@2 X}if}if
 @1 @2 blmode 2 eq{1 exch sub exch 1 exch sub}if 2 copy lt{exch}if
 sub maxblnd mul round cvi dup dup/blstp X 0 eq{pop 1}if
 /blw 256 blstp 1 add div def/kstp k1 k0 sub 2 index div def
 blmode 2 eq{/cstp c1 c0 sub 2 index div def/mstp m1 m0 sub 2 index div def
 /ystp y1 y0 sub 2 index div def}if pop g np[]0 p 0 a
 blw dup dup devpxwd dup add add o 2 div blstp 1 add
 blmode 2 eq{{c0 m0 y0 k0 setcmykcolor dup 0 m 0 256 rl n 1 index add
 /c0 c0 cstp add def/m0 m0 mstp add def/y0 y0 ystp add def/k0 k0 kstp add def}repeat}
 {{k0 blmode 0 eq{H}{sepgr}ifelse dup 0 m 0 256 rl n 1 index add/k0 k0 kstp add def}repeat
 }ifelse p2 G}B
/custblnd{dup -2 eq{doregblnd{exch dup length 1 sub get 1 exch sub exch T F}
 {pop dup length 6 eq{dup 0 5 getinterval exch 5 get}{0 4 getinterval -1}ifelse T}ifelse}{T}ifelse
 {dup -1 eq{F}{1 index docust exch pop}ifelse}if
 5 -2 roll dup -2 eq{doregblnd{exch dup length 1 sub get 1 exch sub exch T F}
 {pop dup length 6 eq{dup 0 5 getinterval exch 5 get}{0 4 getinterval -1}ifelse T}ifelse}{T}ifelse
 {dup -1 eq{F}{1 index docust exch pop}ifelse}if 6 -3 roll 4 -1 roll or
 {dup -2 eq{pop}{setsepval}ifelse 3 1 roll dup -2 eq{pop}{setsepval}ifelse exch 1 blnd}
 {setcompval 6 -2 roll setcompval 8 -4 roll 2 blnd}ifelse}B
/cctp{cvlit/f2 X cvlit/f1 X
 /f12 f1 length f2 length add array def
 f12 0 f1 putinterval f12 f1 length f2 putinterval f12 cvx}def
/st0{/CT load stf}B
/st1{/CT load cctp stf}B
/stcp{ctf cctp stf}B
/svars{ns{/ns F def mark cmykprsnt{count -16 roll}{count -4 roll}ifelse cleartomark}if
 cps ovp trp crntc currentlinewidth currentlinecap currentlinejoin
 currentdash exch aload length pnm pnsv pnsh 2t aload pop
 2a aload pop mx2 aload pop mx3 aload pop imx aload pop mtx currentmatrix aload pop
 mtx1 aload pop psx psy ss currentdict 0 0 m end}B
/rvars{mtx1 z setclp mtx astore z imx astore pop
 mx3 astore pop mx2 astore pop 2a astore pop 2t astore pop
 /pnsh X/pnsv X/pnm X array astore exch p
 b a o setc sttrp stovp mif}B
/s2qd{svars}B
/xpbu {svars count 10 roll bu count -10 roll begin
 /ss X/psy X/psx X mtx1 astore pop currentdict count 1 roll}B
/xpbn{end bn count -1 roll begin rvars}def
/bmp{save 16 1 roll{0 H}if/@1 X 4 index div add 3 1 roll
  5 index div add t div 3 1 roll div S @1 1 and 1 eq @1 2 and 2
  eq{g dup{0}{1}ifelse H .5 .5 idtransform abs exch abs 2 copy
  neg 1 add exch neg 1 add exch F rc V G}if
  {currentgray 1. exch sub H}if exch
  {string/S0 X pop/sf findfont setfont exch 1 exch div 1 index 1 exch div
  S 0 1 3 -1 roll 1 sub{{currentfile S0 readline pop currentfile str readline pop
  cvi dup abs 1 sub 3 index m exch M 0 lt{exit}if}loop pop}for}
  {3 index 0 0 5 index 0 0 mtx astore exch 0 rdstr imagemask}
  ifelse restore}B
pkng{savepacking setpacking}if
end
%%EndProcSet
%%BeginSetup
QuarkXPress_3.31 begin
pkng{/savepacking currentpacking def true setpacking}if
/nf F def .24 /xpys X /ctz 254 def
1 /patfr 1 1 mtx defaultmatrix dtransform pop abs
 dup 72 mul 4 -1 roll div exch .5 add cvi 8 mul dup 8 lt{pop 8}if div def
/psx 12. def
/psy 12. def
/sa 0 def
/ss F def
/curf 0 def
/xpfs 0 def
/doss F def
/pnm 1 def
/minblnd 16 def
/ulpmax 0 def
/ultmax 0 def
/custar 5 array def
/custsh 0 def
/regsh -1 def
/xpxs 1 def
/ovp F def
/trp 0 def
/ns F def
/nochp F def
/nochdev F def
/ff F def
/vtd F def
/custprsnt F def
/ih[currentdash]def
/xpwd 5 dict def
/fmtx matrix def
/far 512 array def
/sa8 8 string def
/sb8 8 string def
/sc8 8 string def
/sd8 8 string def
/chc (\1) def
/s1 ( ) def
/strn(Sx)def
/s75 75 string def
/str 256 string def
/ct0 (\0\0) def
/ct1 100 string def ct1 99 0 put
/ct2 ctz 2 add string def ct2 ctz ct0 putinterval
/bkc(\0abcd)def
/fg (\0) def
/custnamstr 80 string def
/xpdctopn[currentdict/begin load]cvx B
/rdstr{0 1 3 -1 roll{strn 1 3 -1 roll 48 add put dup strn cvn exch string def[
{currentfile}aload pop strn cvn load{readhexstring pop}aload pop]cvx exch}for pop}B
/colorimage where{pop/clrimg{colorimage}def}
 {/proc{/i 0 def/j 0 def cmy{prc prm pry prk dup/tmpstr X}
 {prk dup dup length 3 idiv 0 exch getinterval/tmpstr X tmpstr}ifelse
 {cmy{1 index i get 3 index i get add 4 index i get add 3 div
 255 2 index sub 255 div mul add round cvi 255 exch sub 1}
 {pop dup i 3 getinterval{}forall .11 mul exch .59 mul add exch .3 mul
 add round cvi 3}ifelse i add/i X tmpstr j 3 -1 roll put/j j 1 add def}forall
 cmy{p3}{pop}ifelse tmpstr}B
 /clrimg{4 eq/cmy X pop/prk X cmy{/pry X/prm X/prc X}if/proc load image}B}ifelse
/stf systemdict/settransfer get def
/ctf systemdict/currenttransfer get def
systemdict/setcolortransfer known{/cstf systemdict/setcolortransfer get def}if
/cmykprsnt /currentcmykcolor where{pop T}{F}ifelse def
/setcmykcolor where{pop}
 {/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt
 {pop 0}if 3 1 roll}repeat R pop}B}ifelse
/C/setcmykcolor load def
/stovp0/setoverprint where{/setoverprint get}{{pop}}ifelse def
/stovp{dup/ovp X stovp0}B
/sttrp0/settrap where{/settrap get}{{pop}}ifelse def
/sttrp{dup/trp X sttrp0}B
/setcolorscreen where{pop/docpat where{pop}{/docpat T def}ifelse}
 {/docpat F def/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}B}ifelse
/xpscrn{p2 setscreen}def
/xpcscrn{setcolorscreen}def
/q/Symbol findfont dup maxlength dict begin cf/Encoding mv def currentdict end definefont dup/sym X
/q -1 3 -1 roll newmm/symf X p2
/CT ctf def
/setdg{11 array astore/dg X [0 dg
  {dup 3 1 roll sub neg exch}forall pop 11 -1 roll]/dltg X
  /negg X[/negg load{{}{1 sub neg}ifelse dup .01 lt{pop 2}{1 exch div log}ifelse}
  /exec load/negg load{{2 sub neg}if 5 mul dup cvi dup dup 4 2 roll sub}/exec load
  /dltg load{4 -1 roll get mul}/exec load/dg load{3 -1 roll get add}/exec load]cvx
  st1}def
statusdict begin{    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
	setpagedevice
	2 dict
    dup /PageSize [612 792] put
    dup /ImagingBBox null put
    setpagedevice}stopped pop end
    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
	setpagedevice
	2 dict
    dup /PageSize [612 792] put
    dup /ImagingBBox null put
    setpagedevice
pkng{savepacking setpacking}if
end
/startnup where{begin startnup end}if
userdict/xbldct 41 dict dup begin put
/setpacking where dup{exch pop currentpacking exch true setpacking}if
/@1 0 def/@2 0 def
/c0 0 def/m0 0 def/y0 0 def/k0 0 def
/c1 0 def/m1 0 def/y1 0 def/k1 0 def
/cstp 0 def/mstp 0 def/ystp 0 def/kstp 0 def
/blmode 0 def
/blf 0 def
/blstp 0 def
/blw 0 def
/minblnd 16 def
/mtx matrix def
/T true def
/F false def
/B{bind def}bind def
/X{exch def}B
/m/moveto load def
/l/lineto load def
/rl/rlineto load def
/p2{pop pop}B
/p3{pop pop pop}B
/p4{pop pop pop pop}B
/setcustomcolor where{pop/docust{save 1 index 4 get
 [.5 .5 .5 0 6 -1 roll] 1 setcustomcolor currentgray
 exch restore dup 1 eq exch 0 eq or}B}{/docust{F}B}ifelse
/setseparationgray where{pop/doregblnd T def/sepgr{setseparationgray}B}
 {/doregblnd F def/sepgr systemdict/setgray get def}ifelse
/setsepval{dup -1 eq{pop aload pop setcmykcolor}
 {setcustomcolor}ifelse currentgray}B
/setcompval{dup -1 eq{pop aload pop}
 {exch aload p2 4{4 index mul 4 1 roll}repeat 5 -1 roll pop}ifelse}B
/calcbnd{72 72 mtx defaultmatrix dtransform abs exch abs 2 copy lt{exch}if
 pop/languagelevel where{pop languagelevel}{1}ifelse 2 ge{pop 256}
 {/currentcolorscreen where{pop currentcolorscreen p2 3
 {3 index 2 copy lt{exch}if 5 1 roll p4}repeat}{currentscreen p2}ifelse
 div dup mul round cvi 15 add 16 idiv dup 1 lt{pop 1}if
 16 mul dup 256 gt{pop 256}if}ifelse minblnd 2 copy lt{exch}if pop/maxblnd X}B
/blar[
 {dup neg -128 m 0 256 rl dup add 0 rl 0 -256 rl}bind
 {dup neg dup m dup add 0 1 index rl dup 0 rl 0 exch neg rl}bind
 {dup neg dup 0 exch m 0 l dup 0 exch l 0 l}bind
 {0 0 3 -1 roll 0 360 arc}bind
 {dup mul dup add sqrt 0 0 3 -1 roll 0 360 arc}bind
]def
/xblnd{/blmode X/blf X blmode 2 eq{/k1 X/y1 X/m1 X/c1 X/k0 X/y0 X/m0 X/c0 X}{/k1 X/k0 X}ifelse
 k1 k0/@1 X/@2 X blmode 2 eq{@2 @1 sub abs c1 c0 sub abs 2 copy lt
 {exch c1 c0/@1 X/@2 X}if pop m1 m0 sub abs 2 copy lt
 {exch m1 m0/@1 X/@2 X}if pop y1 y0 sub abs lt{y1 y0/@1 X/@2 X}if}if
 @1 @2 blmode 2 eq{1 exch sub exch 1 exch sub}if 2 copy lt{exch}if
 sub/blstp exch/maxblnd where{pop}{calcbnd}ifelse maxblnd mul round cvi def
 blstp 0 ne{/blw 128 blstp 1 add div def/kstp k1 k0 sub blstp div def
 blmode 2 eq{/cstp c1 c0 sub blstp div def/mstp m1 m0 sub blstp div def
 /ystp y1 y0 sub blstp div def}if}if gsave 128 128 translate newpath
 blmode 2 eq{c0 m0 y0 k0 setcmykcolor}{k0 blmode 0 eq{setgray}{sepgr}ifelse}ifelse
 128 blar 1 get exec fill blstp 0 ne{blw 128 blar blf get blstp 1 add
 blmode 2 eq{{c0 m0 y0 k0 setcmykcolor 2 copy exec fill exch 2 index sub exch
 /c0 c0 cstp add def/m0 m0 mstp add def/y0 y0 ystp add def/k0 k0 kstp add def}repeat}
 {{k0 blmode 0 eq{setgray}{sepgr}ifelse 2 copy exec fill exch 2 index sub exch
 /k0 k0 kstp add def}repeat}ifelse p3}if grestore}B
/xcustblnd{5 1 roll dup -2 eq{doregblnd{exch dup length 1 sub get 1 exch sub exch T F}
 {pop dup length 6 eq{dup 0 5 getinterval exch 5 get}{0 4 getinterval -1}ifelse T}ifelse}{T}ifelse
 {dup -1 eq{F}{1 index docust exch pop}ifelse}if
 5 -2 roll dup -2 eq{doregblnd{exch dup length 1 sub get 1 exch sub exch T F}
 {pop dup length 6 eq{dup 0 5 getinterval exch 5 get}{0 4 getinterval -1}ifelse T}ifelse}{T}ifelse
 {dup -1 eq{F}{1 index docust exch pop}ifelse}if 6 -3 roll 4 -1 roll or
 {dup -2 eq{pop}{setsepval}ifelse 3 1 roll dup -2 eq{pop}{setsepval}ifelse exch 3 -1 roll 1 xblnd}
 {setcompval 6 -2 roll setcompval 8 -4 roll 9 -1 roll 2 xblnd}ifelse}B
{setpacking}if
end
%%EndSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(dnj; page: 1 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 1
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
s2qd
-1000 -1000 :M
0 G
f0_1 sf
( )S
-1000 -1000 :M
xps2ps
xpbu
0 0 F 0 (|______Palatino) T F /|______Palatino-Roman 0 T dfnt
xpbn
0 14 14 f
216.19 84.07 m 22 155.63 (Computer Science 15-212)D
225.36 101.14 m 18 137.29 (Midterm Examination)D
239.55 118.2 m 3 27.75 (Febr)D
267.2 h 12 81.25 (uary 27, 1996)D
s2qd
-1000 -1000 :M
f1_1 sf
( )S
xps2ps
xpbu
1 1 F 0 (|______Palatino) T /|______Palatino-Roman T /|______Palatino-Bold 0 T dfnt
xpbn
1 12 12 f
61 193.8 m 11 65.95 (Instructions)D
0 11 11 f
61 231.7 m (*)M
73 h 40 198.68 (This is a closed-book, closed-notes exam.)D
61 257.11 m (*)M
73 h 60 296.3 (This exam consists of 5 sheets of questions and 2 worksheets.)D
61 282.52 m (*)M
73 h 3 22.75 (Ther)D
95.55 h 3 17.86 (e ar)D
113.22 h 35 172.35 (e 4 questions, worth 25 points each.)D
61 307.93 m (*)M
73 h 34 178.98 (Read each question completely befor)D
251.78 h 30 148.31 (e attempting to solve any part.)D
61 333.34 m (*)M
73 h (W)M
83.19 h 15 77.36 (rite your name, )D
160.14 h 3 26.02 (Andr)D
185.96 h 42 208.02 (ew ID and section letter in the space below)D
392.97 h 15 78.28 (, and write your)D
73 346.75 m 19 100.6 (name in the space pr)D
173.4 h 31 154.27 (ovided at the top of every page.)D
61 372.16 m (*)M
73 h (T)M
78.75 h 15 86 (wo worksheets ar)D
164.56 h 55 274.6 (e attached for your personal use. Nothing you write ther)D
438.96 h 5 26.79 (e will)D
73 385.56 m 31 154.35 (count for or against your grade.)D
61 410.97 m (*)M
73 h (W)M
83.19 h 41 199.3 (rite your answers legibly in the spaces pr)D
282.29 h 38 182.47 (ovided. If you use the back of a sheet,)D
73 424.38 m 38 186.76 (indicate clearly that you have done so.)D
61 449.79 m (*)M
73 h 74 375.64 (In writing functions, you should use clausal form and pattern matching wher)D
448.44 h 9 47.7 (e possible)D
73 463.2 m 25 118.74 (instead of explicit constr)D
191.65 h 14 71.09 (uctors such as )D
s2qd
-1000 -1000 :M
f2_1 sf
( )S
xps2ps
xpbu
2 2 F 0 (|______Palatino) T /|______Palatino-Roman T /|______Palatino-Italic 0 T dfnt
xpbn
2 11 11 f
262.74 463.2 m 1 11 (hd)D
0 11 11 f
276.49 463.2 m 3 21.37 (and )D
2 11 11 f
297.86 463.2 m 1 6.72 (tl)D
0 11 11 f
304.58 463.2 m (.)M
g 1 H 623 60 720 528 F rc V G
2 11 11 f
66 637.06 m 22 102.55 (For instructor use only)D
478.83 741.06 m 4 22.91 (page )D
501.75 h (1)M
510 h 3 17 (/ 14)D
343.43 665.56 m 4 20.14 (total)D
0 11 11 f
182.2 665.56 m (1)M
218.2 665.56 m (2)M
254.2 665.56 m (3)M
290.2 665.56 m (4)M
g 1 H 532.77 60 616 528 F rc V G
66 546.83 m 4 32.37 (Name )D
66 572.24 m 3 26.02 (Andr)D
91.82 h 4 29.41 (ew ID)D
66 597.65 m 6 35.11 (Section)D
1 o
456 552 132 552 L
456 578 132 578 L
456 605 132 605 L
310.87 671.75 168 671.75 L
310.5 655.5 167 655.5 L
167 655.5 167 707.5 L
311 707.5 167 707.5 L
203 707.5 203 655.5 L
239 707.5 239 655.5 L
275 707.5 275 655.5 L
311 707.5 311 655.5 L
382.5 655.5 324.25 655.5 L
324.5 707.5 382.5 707.5 L
382.5 707.5 382.5 655.5 L
324.5 655.5 324.5 707.5 L
382.5 671.75 324.5 671.75 L
end
%%QRKPageEnd
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(dnj; page: 2 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 2
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
61 741.06 m 4 22.91 (page )D
83.91 h (2)M
92.16 h 3 17 (/ 14)D
end
%%QRKPageEnd
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(dnj; page: 3 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 3
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
478.83 741.06 m 4 22.91 (page )D
501.75 h (3)M
510 h 3 17 (/ 14)D
63.5 29.56 m 4 26.58 (name:)D
.5 o
18.25 60.25 46.93 527.75 F rc n
1 12 12 f
61 93.79 m (1)M
97 h 19 118.63 (Scope and Evaluation)D
0 11 11 f
61 131.69 m 25 134.31 (What do the following expr)D
195.11 h 19 95.99 (essions evaluate to?)D
61 157.1 m 2 12.82 (\(a\))D
85 h 5 27.68 ([2pts])D
121 h 50 222.23 (\(let val x = 5 in x end\) + \(let val x = 3 in x end\))D
2 11 11 f
97 187.1 m 11 52.22 (evaluates to)D
97 205.1 m (8)M
0 11 11 f
61 236.51 m 2 13.4 (\(b\))D
85 h 5 27.68 ([2pts])D
121 h 52 230.19 (let val x = 5 in \(x + let val x = 6 in 2 * x end\) end)D
2 11 11 f
97 266.51 m 11 52.22 (evaluates to)D
97 284.51 m 1 11 (17)D
0 11 11 f
61 315.92 m 2 12.2 (\(c\))D
85 h 5 27.68 ([2pts])D
121 h 2 12.05 (let)D
97 329.33 m 8 41 (val x = 5)D
97 342.74 m 15 68.6 (fun f\(x\) = 5 - x)D
97 356.15 m 8 41 (val x = 6)D
85 369.56 m 1 9.6 (in)D
99.75 382.97 m 3 16.66 (f\(x\))D
85 396.38 m 2 18.39 (end)D
2 11 11 f
97 426.38 m 11 52.22 (evaluates to)D
97 444.38 m 1 9.16 (-1)D
0 11 11 f
61 475.78 m 2 14.04 (\(d\))D
85 h 5 27.68 ([2pts])D
121 h 43 191.04 (\(fn \(x\) => let val x = x + 1 in 2 * x end\) 3)D
2 11 11 f
97 505.78 m 11 52.22 (evaluates to)D
97 523.78 m (8)M
0 11 11 f
61 555.19 m 2 12.59 (\(e\))D
85 h 5 27.68 ([2pts])D
121 h 15 68.15 (let val x = 3 in)D
109 568.6 m 39 179.87 (let val x = x + 1 and f = fn\(y\) => x + y)D
109 582.01 m 6 29 (in f\(x\))D
109 595.42 m 2 18.39 (end)D
85 608.83 m 2 18.39 (end)D
2 11 11 f
97 638.83 m 11 52.22 (evaluates to)D
97 656.83 m (7)M
end
%%QRKPageEnd
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(dnj; page: 4 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 4
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
61 741.06 m 4 22.91 (page )D
83.91 h (4)M
92.16 h 3 17 (/ 14)D
0 11 11 f
61 93.06 m 18 92.48 (If you type an expr)D
153.29 h 13 72 (ession into ML)D
227.64 h 59 279.24 (, it may evaluate normally; it may raise an exception; or it)D
61 106.47 m 97 445.15 (may fail to evaluate at all because it is ill-typed, or it has an unbound variable. \(Of course, it)D
61 119.88 m 49 231.42 (may also be syntactically invalid, but let\325s ignor)D
292.22 h 8 36.25 (e that\). )D
61 145.29 m 29 146.02 (For each of the following expr)D
206.83 h 61 309.47 (essions, indicate all the \322bad\323 outcomes that happen sometimes)D
61 158.7 m 40 215.75 (or always \(depending on what was typed pr)D
276.55 h 18 89.49 (eviously\), by encir)D
365.84 h 15 73.76 (cling options fr)D
439.41 h 17 83.81 (om the given list,)D
61 172.11 m 31 164.44 (or choose \322never a bad outcome\323.)D
61 222.93 m 2 10.98 (\(f\))D
85 h 5 27.68 ([3pts])D
121 h 50 229.55 (let val x = \322abc\323 in let val x = 3 in x + x end end)D
2 11 11 f
97 248.34 m 61 275.56 (unbound variable, ill-typed, non-termination, exception raised)D
385 h 18 89.91 (never a bad outcome)D
g 385 248.34 m 89.91 .75 -11 0 F T ul G
0 11 11 f
61 299.16 m 2 13.44 (\(g\))D
85 h 5 27.68 ([3pts])D
121 h 41 183.59 (let val x: int = 3 and y: int = x in y end)D
2 11 11 f
97 324.57 m 26 120.48 (unbound variable, ill-typed)D
g 97 324.57 m 120.48 .75 -11 0 F T ul G
217.48 h 34 155.08 (, non-termination, exception raised)D
385 h 18 89.91 (never a bad outcome)D
0 11 11 f
61 375.38 m 2 13.72 (\(h\))D
85 h 5 27.68 ([3pts])D
121 h 29 126.49 (local val x = 5 in fun f \(z: r)D
247.29 h 15 74.27 (eal\) = z + x end)D
2 11 11 f
97 400.79 m 17 83.21 (unbound variable, )D
180.21 h 10 42.77 (ill-typed, )D
g 180.21 400.79 m 42.77 .75 -11 0 F T ul G
222.98 h 32 149.58 (non-termination, exception raised)D
385 h 18 89.91 (never a bad outcome)D
0 11 11 f
61 451.61 m 2 10.52 (\(i\))D
85 h 5 27.68 ([3pts])D
121 h 16 77.44 (fn \(x\) => x div 0)D
2 11 11 f
97 477.02 m 61 275.56 (unbound variable, ill-typed, non-termination, exception raised)D
385 h 18 89.91 (never a bad outcome)D
g 385 477.02 m 89.91 .75 -11 0 F T ul G
97 503.84 m 16 75.56 (\(because the expr)D
172.36 h 40 174.62 (ession evaluates to a function; note ther)D
346.79 h 1 7.33 (e\325)D
353.52 h 32 140.61 (s no application of the function\))D
0 11 11 f
61 554.66 m 2 9.89 (\(j\))D
85 h 5 27.68 ([3pts])D
121 h 21 90.58 (\(fn \(x :: xs\)  => x\) y)D
2 11 11 f
97 580.07 m 26 120.48 (unbound variable, ill-typed)D
g 97 580.07 m 120.48 .75 -11 0 F T ul G
217.48 h 17 81.56 (, non-termination,)D
299.04 h 16 73.52 ( exception raised)D
g 299.04 580.07 m 73.52 .75 -11 0 F T ul G
385 h 18 89.91 (never a bad outcome)D
end
%%QRKPageEnd
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(dnj; page: 5 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 5
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
478.83 741.06 m 4 22.91 (page )D
501.75 h (5)M
510 h 3 17 (/ 14)D
63.5 29.56 m 4 26.58 (name:)D
.5 o
18.25 60.25 46.93 527.75 F rc n
1 12 12 f
61 93.79 m (2)M
97 h 22 135.94 (Recursion and Induction)D
0 11 11 f
61 131.69 m 18 96.15 (Consider a function)D
97 157.1 m 8 46.7 (mostly_tr)D
143.62 h 28 119.2 (ue: \324a list * \(\324a -> bool\) ->)D
265.56 h 3 21.29 (bool)D
61 182.51 m 26 120.73 (that, given a list and a pr)D
181.53 h 9 44.26 (edicate, r)D
225.6 h 8 41.56 (eturns tr)D
267.08 h 4 21.51 (ue if)D
288.39 h 7 35.36 (f the pr)D
323.55 h 12 55.71 (edicate is tr)D
379.17 h 28 135.73 (ue on the majority of the ele)D
514.9 h (-)M
61 195.92 m 30 146.12 (ments of the list. For example,)D
97 221.33 m 8 46.7 (mostly_tr)D
143.62 h 28 118.9 (ue \(2, 4, 5], fn\(i\) => i > 3\))D
61 246.74 m 14 68.84 (evaluates to tr)D
129.76 h 38 178.81 (ue, since 2 out of 3 of the elements ar)D
308.37 h 3 18.47 (e gr)D
326.64 h 13 62.34 (eater than 3. )D
61 272.15 m 2 12.82 (\(a\))D
85 h 51 254.43 ([3 pts] Suppose we tried to implement the function r)D
339.23 h 20 103.49 (ecursively by writing)D
85 297.56 m 12 66.15 (fun mostly_tr)D
151.06 h 18 78.38 (ue \(nil, f\) = false)D
97 310.97 m 10 56.12 (| mostly_tr)D
153.03 h 4 24.71 (ue \(h)D
180.49 h 27 116.64 (:: t, f\) = G\(h, f, mostly_tr)D
297.04 h 8 35.62 (ue\(t, f\)\))D
85 336.38 m 3 25.18 (wher)D
109.99 h 1 8.02 (e )D
2 11 11 f
118 336.38 m (G)M
0 11 11 f
128.69 336.38 m 59 307.15 (is some function whose code is not shown. Why must this appr)D
435.64 h 9 45.98 (oach fail?)D
2 11 11 f
61 366.38 m 95 401.99 (because the induction hypothesis is too weak. if mostly_true\(t\) is true, and f\(h\) is false, ther)D
462.8 h 1 7.33 (e\325)D
469.53 h 10 49.79 (s no way of)D
61 384.38 m 51 226.05 (knowing whether mostly_true \(h::t\) is true or false.)D
0 11 11 f
61 451.78 m 2 13.4 (\(b\))D
85 h 6 30.43 ([8 pts])D
123.75 h (W)M
133.94 h 17 79.52 (rite the code for )D
2 11 11 f
213.46 451.78 m 10 53.76 (mostly_true)D
0 11 11 f
269.98 451.78 m 3 21.6 (by \336)D
291.58 h 23 113.32 (lling in the gaps below:)D
85 477.19 m 12 66.15 (fun mostly_tr)D
151.06 h 10 43.74 (ue \(l, f\) =)D
97 502.6 m 2 12.05 (let)D
121 h 32 130.31 (\(* excess \(q: \324a list\): int  = tr)D
251.22 h 15 71.28 (ue_ct - false_ct)D
145 516.01 m 3 25.18 (wher)D
169.99 h 3 15.94 (e tr)D
185.84 h 53 252.7 (ue_ct is the number of elements in q for which f is tr)D
438.46 h 1 11.9 (ue)D
145 529.42 m 63 298.82 (and false_ct is the number of elements in q for which f is false)D
121 542.83 m 1 7.94 (*\))D
121 569.65 m 3 19.44 (fun )D
140.44 h 17 76.45 (excess \( nil \) = 0)D
g 140.44 569.65 m 76.45 .75 -11 0 F T ul G
133 583.06 m 10 51.51 (| excess \(e)D
g 133 583.06 m 51.51 .75 -11 0 F T ul G
184.51 h 
g 184.51 583.06 m 2.75 .75 -11 768 F T ul G
187.26 h 1 5.5 (::)D
g 187.26 583.06 m 5.5 .75 -11 256 F T ul G
192.76 h 
g 192.76 583.06 m 2.75 .75 -11 768 F T ul G
195.51 h 1 9.82 (q\))D
g 195.51 583.06 m 9.82 .75 -11 256 F T ul G
205.32 h 
g 205.32 583.06 m 2.75 .75 -11 768 F T ul G
208.07 h 41 178.36 (= \(if \(f e\) then 1 else ~1\)  +  \(excess q\))D
g 208.07 583.06 m 178.36 .75 -11 256 F T ul G
97 621.88 m 1 9.6 (in)D
133 635.29 m 16 69.6 (excess \( l \) >  0)D
g 133 635.29 m 69.6 .75 -11 0 F T ul G
97 660.7 m 2 18.39 (end)D
end
%%QRKPageEnd
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(dnj; page: 6 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 6
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
61 741.06 m 4 22.91 (page )D
83.91 h (6)M
92.16 h 3 17 (/ 14)D
0 11 11 f
61 93.06 m 33 160.22 (In the next two parts, you will pr)D
221.02 h 21 109.53 (ove by induction over )D
2 11 11 f
330.55 93.06 m (q)M
0 11 11 f
341.14 93.06 m 3 19.07 (that)D
2 11 11 f
362.96 93.06 m 9 42.25 (excess\(q\) )D
0 11 11 f
407.96 93.06 m 17 91.74 (computes the right)D
61 106.47 m 5 29.56 (value.)D
61 131.88 m 2 12.2 (\(c\))D
85 h 44 214.46 ([5 pts] State the inductive hypothesis and pr)D
299.26 h 24 111.85 (ove it for the base case.)D
2 11 11 f
61 161.88 m 20 95.51 (Induction hypothesis:)D
159.26 h 21 86.66 (for all lists q and pr)D
245.73 h 48 199.87 (edicates f, excess\(q\) is true_ct - false_ct, wher)D
445.4 h 15 65.27 (e true_ct is the)D
61 179.88 m 109 465.52 (number of elements in q for which f is true, and false_ct is the number of elements in q for which f is false.)D
61 215.88 m 99 421.43 (The induction is over the list q. The base case is q = nil. For no elements, true_ct and false_ct ar)D
482.23 h 8 37.16 (e both 0,)D
61 233.88 m 14 65.78 (and excess\(q\) r)D
126.58 h 8 39.72 (eturns 0.)D
0 11 11 f
61 341.52 m 2 14.04 (\(d\))D
85 h 9 44.16 ([5 pts] Pr)D
128.97 h 22 110.88 (ove the induction step.)D
2 11 11 f
61 371.52 m 43 193.89 (Assume the hypothesis holds for some list q.)D
61 389.52 m 19 83.61 (Consider the list q\325)D
146.76 h 9 35.29 (= e :: q. )D
61 407.52 m 25 109.89 (true_ct \(q\325\) = true_ct \(h\))D
173.64 h (+)M
183.06 h 43 181.75 (true_ct \(q\), and similarly for false_ct. So )D
61 425.52 m 86 350.96 (true_ct\(q\325\) - false_ct\(q\325\) = true_ct\([e]\) - false_ct\([e]\) + \(true_ct\(q\) - false_ct\(q\)\).)D
61 443.52 m 57 225.69 (If \(f e\) is true, true_ct\([e]\) - false_ct\([e]\) = 1 - 0 = 1)D
61 461.52 m 59 233.57 (If \(f e\) is false, true_ct\([e]\) - false_ct\([e]\) = 0 - 1 = ~1)D
61 479.52 m 109 451.11 (By hypothesis, excess\(q\) evaluates to \(true_ct\(q\) - false_ct\(q\)\). So \(if \(f e\) then 1 else ~1\)  +  \(excess q\)\))D
61 497.52 m 25 107.91 (evaluates to true_ct \(q\325\).)D
0 11 11 f
61 528.93 m 2 12.59 (\(e\))D
85 h 14 66.9 ([2 pts] Finally)D
150.68 h 8 39.6 (, using r)D
190.09 h 8 41.71 (esults pr)D
231.6 h 10 53.87 (oved so far)D
284.66 h 3 16.45 (, pr)D
300.91 h 11 57.81 (ove the corr)D
358.53 h 19 96.59 (ectness of mostly_tr)D
455.03 h 2 14.65 (ue.)D
2 11 11 f
61 558.93 m 66 271.86 (f is true on the majority of the elements of a list q if true_ct\(q\))D
335.61 h 14 60.52 (>  false_ct\(q\).)D
61 576.93 m 13 63.63 (But true_ct\(q\))D
127.38 h 37 165.59 (>  false_ct\(q\) exactly when true_ct\(q\))D
295.71 h 18 75.18 (-  false_ct\(q\) > 0,)D
61 594.93 m 20 88.93 (so \(excess\(q\) > 0\) pr)D
149.73 h 14 66.38 (oduces the corr)D
215.92 h 4 19.44 (ect r)D
235.17 h 5 24.14 (esult.)D
0 11 11 f
61 626.34 m 2 10.98 (\(f\))D
85 h 21 101.98 ([2 pts] What is the pr)D
186.78 h 22 113.53 (econdition of mostly_tr)D
300.22 h 9 48.27 (ue? \(Hint:)D
351.25 h 24 122.6 (think about termination.\))D
2 11 11 f
61 656.34 m 5 29.03 (The pr)D
89.83 h 31 136.94 (econdition of mostly_true \(q, f\))D
229.52 h 57 254.37 (is that f must terminate when applied to any element of q.)D
61 674.34 m 68 308.73 (\(Puzzle: could you implement a version of mostly_true that does not r)D
369.53 h 4 22.82 (equir)D
392.15 h 26 108.75 (e f to terminate on all ele)D
500.9 h (-)M
61 692.34 m 64 281.96 (ments if \(f e\) terminates with the value true for most elements?\))D
end
%%QRKPageEnd
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(dnj; page: 7 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 7
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
478.83 741.06 m 4 22.91 (page )D
501.75 h (7)M
510 h 3 17 (/ 14)D
63.5 29.56 m 4 26.58 (name:)D
.5 o
18.25 60.25 46.93 527.75 F rc n
1 12 12 f
61 93.79 m (3)M
97 h 24 142.27 (Representation Invariants)D
0 11 11 f
61 131.69 m 16 82.79 (Given a binary tr)D
143.59 h 9 51.88 (ee whose r)D
195.28 h 2 16.22 (epr)D
211.3 h 13 63.23 (esentation is:)D
97 157.1 m 16 82.29 (type key = string)D
97 170.51 m 10 53.56 (datatype tr)D
150.36 h 23 121.49 (ee = Empty | Node of \(tr)D
271.65 h 18 78.47 (ee * key * int * tr)D
349.93 h 2 14.19 (ee\))D
61 195.92 m 9 47.45 (with the r)D
108.25 h 2 16.22 (epr)D
124.28 h 20 99.71 (esentation invariant:)D
2 11 11 f
97 221.33 m 4 29.94 (Empty)D
0 11 11 f
129.69 221.33 m 12 54.37 (is a valid tr)D
183.86 h 1 10.53 (ee)D
2 11 11 f
97 234.74 m 31 126.76 (Node\(left, k, left_size, right\) )D
0 11 11 f
226.51 234.74 m 10 45.05 (is valid if)D
271.36 h 1 6.41 (f:)D
97 260.15 m 17 82.53 (\(1\) for every key )D
2 11 11 f
179.53 260.15 m 2 10.69 (kl )D
0 11 11 f
190.22 260.15 m 2 12.35 (in )D
2 11 11 f
202.57 260.15 m 3 14.05 (left)D
0 11 11 f
216.62 260.15 m 1 5.5 (, )D
2 11 11 f
222.12 260.15 m 2 10.69 (kl )D
0 11 11 f
232.81 260.15 m 1 9.42 (< )D
2 11 11 f
242.22 260.15 m (k)M
0 11 11 f
97 285.56 m 17 82.53 (\(2\) for every key )D
2 11 11 f
179.53 285.56 m 1 9.16 (kr)D
0 11 11 f
191.44 285.56 m 2 12.35 (in )D
2 11 11 f
203.79 285.56 m 4 21.99 (right)D
0 11 11 f
225.78 285.56 m 1 5.5 (, )D
2 11 11 f
231.28 285.56 m 1 7.63 (k )D
0 11 11 f
238.92 285.56 m 1 9.42 (< )D
2 11 11 f
248.33 285.56 m 1 9.16 (kr)D
0 11 11 f
97 310.97 m 3 15.57 (\(3\) )D
2 11 11 f
112.57 310.97 m 8 36.05 (left_size)D
0 11 11 f
151.37 310.97 m 44 224.71 (is equal to the number of non-empty nodes in )D
2 11 11 f
376.07 310.97 m 3 14.05 (left)D
0 11 11 f
61 336.38 m 29 144.2 (write the following functions:)D
61 361.78 m 2 12.82 (\(a\))D
85 h 6 30.43 ([9 pts])D
121 h (A)M
131.7 h 7 40.76 (function)D
97 387.19 m 10 50.74 (lookup : tr)D
147.54 h 14 66.82 (ee * int -> key)D
85 412.6 m 15 70.69 (that, given a tr)D
155.5 h 17 86.22 (ee and an integer )D
2 11 11 f
241.72 412.6 m 1 5.81 (i )D
0 11 11 f
247.53 412.6 m (r)M
251.67 h 10 51.64 (eturns the )D
2 11 11 f
303.31 412.6 m (i)M
0 11 11 f
306.37 412.6 m 25 117.45 (-th smallest key in the tr)D
423.62 h 14 72.3 (ee. Specify any)D
85 426.01 m 1 10.95 (pr)D
95.76 h 26 132.77 (econditions your function r)D
228.33 h 4 25.6 (equir)D
253.73 h 14 72.98 (es to work corr)D
326.51 h 4 23.05 (ectly)D
348.34 h (.)M
2 11 11 f
61 456.01 m 13 56.79 (\(* lookup\(t,i\))D
74.75 474.01 m 27 125.04 (Assumes: 1 <= i <= size of t)D
74.75 492.01 m (Y)M
81.48 h 33 136.55 (ields: i-th smallest key in the tr)D
217.84 h 3 14.97 (ee t)D
61 510.01 m 1 7.94 (*\))D
61 528.01 m 48 199.41 (fun lookup\(Node\(left, k, left_size, right\), i\) = )D
61 546.01 m 23 96.42 (if \(i <= left_size\) then)D
66.5 564.01 m 13 56.5 (lookup\(left,i\))D
61 582.01 m 31 126.06 (else if \(i = left_size + 1\) then)D
66.5 600.01 m (k)M
61 618.01 m 3 15.89 (else)D
66.5 636.01 m 31 127.06 (lookup\(right, i - left_size - 1\))D
end
%%QRKPageEnd
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(dnj; page: 8 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 8
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
61 741.06 m 4 22.91 (page )D
83.91 h (8)M
92.16 h 3 17 (/ 14)D
0 11 11 f
61 93.06 m 2 13.4 (\(b\))D
85 h 8 38.68 ([12 pts] )D
123.27 h (A)M
133.97 h 7 40.76 (function)D
97 118.47 m 10 43.63 (insert : tr)D
140.44 h 14 64.31 (ee * key  -> tr)D
204.55 h 1 10.53 (ee)D
85 143.88 m 15 70.69 (that, given a tr)D
155.5 h 18 85.44 (ee t and a key k, r)D
240.74 h 12 59.57 (eturns the tr)D
300.11 h 3 17.63 (ee r)D
317.54 h 10 49.81 (esulting fr)D
367.15 h 20 113.61 (om adding a node with)D
85 157.29 m 14 67.38 (key k to the tr)D
152.18 h 19 92.34 (ee t. Specify any pr)D
244.33 h 26 132.77 (econditions your function r)D
376.9 h 4 25.6 (equir)D
402.3 h 14 72.98 (es to work corr)D
475.08 h 4 23.05 (ectly)D
496.91 h (.)M
2 11 11 f
61 187.29 m 14 57.72 (\(* insert\(t, k\))D
74.75 205.29 m 35 163.75 (Assumes: Key k does not appear in tr)D
238.3 h 3 14.97 (ee t)D
74.75 223.29 m (Y)M
81.48 h 11 46.13 (ields: the r)D
127.42 h 26 112.4 (esult of adding key k to tr)D
239.63 h 4 17.72 (ee t.)D
61 241.29 m 1 7.94 (*\))D
61 259.29 m 15 77.3 (fun insert\(Empty)D
137.89 h 17 86.68 (, k'\) = Node\(Empty)D
224.17 h 14 64.14 (, k', 0, Empty\))D
66.5 277.29 m 46 189.87 (| insert\(Node\(left, k, left_size, right\), k'\) =)D
72 295.29 m 15 64.08 (if \(k' < k\) then)D
80.25 313.29 m 47 192.37 (Node\(insert\(left, k'\), k', left_size + 1, right\))D
72 331.29 m 3 15.89 (else)D
80.25 349.29 m 41 168.29 (Node\(left, k, left_size, insert\(right,k'\)\))D
0 11 11 f
61 380.7 m 2 12.2 (\(c\))D
85 h 34 167.91 ([2 pts] Which of the two functions )D
2 11 11 f
252.91 380.7 m 5 25.67 (insert)D
0 11 11 f
281.33 380.7 m 3 21.37 (and )D
2 11 11 f
302.7 380.7 m 5 29.32 (lookup)D
0 11 11 f
334.76 380.7 m 26 132.95 (makes use of the invariant?)D
2 11 11 f
61 410.7 m 11 54.57 (both of them)D
0 11 11 f
61 467.52 m 2 14.04 (\(d\))D
85 h 34 167.91 ([2 pts] Which of the two functions )D
2 11 11 f
252.91 467.52 m 5 25.67 (insert)D
0 11 11 f
281.33 467.52 m 3 21.37 (and )D
2 11 11 f
302.7 467.52 m 5 29.32 (lookup)D
0 11 11 f
334.76 467.52 m 35 179.59 (does work to maintain the invariant?)D
2 11 11 f
61 497.52 m 11 51.63 (insert alone)D
end
%%QRKPageEnd
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(dnj; page: 9 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 9
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
478.83 741.06 m 4 22.91 (page )D
501.75 h (9)M
510 h 3 17 (/ 14)D
63.5 29.56 m 4 26.58 (name:)D
.5 o
18.25 60.25 46.93 527.75 F rc n
1 12 12 f
61 93.79 m (4)M
97 h 4 25.97 (Lists)D
0 11 11 f
61 131.69 m 2 12.82 (\(a\))D
85 h 9 49.68 ([12 pts] W)D
133.86 h 14 68.15 (rite a function)D
97 157.1 m 53 236.7 (punctuate : \(string * string\) -> string list -> string)D
85 182.51 m 55 277.02 (that, given a separator symbol and a terminator symbol r)D
361.83 h 32 156.83 (eturns a function that converts a)D
85 195.92 m 47 216.91 (list of strings into a single punctuated string.)D
85 221.33 m 11 63.19 (For example,)D
97 246.74 m 51 243.78 (\(punctuate \(\322, \323, \322! \323\)\) [\322milk\323, \322eggs\323, \322bananas\323])D
85 272.15 m 88 426.42 (evaluates to the string \322milk, eggs, bananas!\323. Recall that the operator that appends two)D
85 285.56 m 12 55.74 (strings is ^.)D
2 11 11 f
61 315.56 m 23 108.97 (fun punctuate \(delimiter)D
169.16 h 22 101.97 (, terminator\) phrases =)D
72 333.56 m 2 10.99 (let)D
83 351.56 m 14 65 (fun d'\([]\) = "")D
83 369.56 m 31 134.85 (|    d'\(p::nil\) = p ^ terminator)D
83 387.56 m 38 162.9 (|    d'\(p::ps\) = p ^ delimiter ^ d'\(ps\))D
72 405.56 m 1 9.17 (in)D
83 423.56 m 10 49.48 (d'\(phrases\))D
72 441.56 m 3 18.64 (end;)D
0 11 11 f
61 472.97 m 2 13.4 (\(b\))D
85 h 9 49.68 ([13 pts] W)D
133.86 h 14 68.15 (rite a function)D
97 498.38 m 29 133.98 (countMissing : int list -> int)D
85 523.78 m 54 250.43 (that takes as input a sorted list of integers without r)D
335.23 h 12 57.62 (epetitions, r)D
392.66 h 2 16.22 (epr)D
408.68 h 7 40.89 (esenting)D
85 537.19 m 20 111.21 (check numbers, and pr)D
196.02 h 12 62.42 (oduces as a r)D
258.24 h 36 181.35 (esult the number of checks missing fr)D
439.39 h 15 73.07 (om the list. For)D
85 550.6 m 7 43.98 (example,)D
97 576.01 m 29 150.46 (countMissing [101,102,105,107])D
85 601.42 m 37 187.71 (evaluates to 3 since the checks number)D
272.52 h 22 109.2 (ed 103, 104, and 106 ar)D
381.52 h 9 48.71 (e missing.)D
2 11 11 f
97 631.42 m 25 119.92 (fun countMissing \(nil\) = 0)D
133 649.42 m 26 122.29 (| countMissing \(x::nil\) = 0)D
133 667.42 m 26 122.6 (| countMissing \(x::y::ys\) =)D
169 685.42 m 27 128.75 (y-x -1 + countMissing\(y::ys\))D
end
%%QRKPageEnd
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(dnj; page: 10 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 10
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
61 741.06 m 4 22.91 (page )D
83.91 h 1 11 (10)D
97.66 h 3 17 (/ 14)D
end
%%QRKPageEnd
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(dnj; page: 11 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 11
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
473.33 741.06 m 4 22.91 (page )D
496.25 h 1 11 (11)D
510 h 3 17 (/ 14)D
63.5 29.56 m 4 26.58 (name:)D
.5 o
18.25 60.25 46.93 527.75 F rc n
end
%%QRKPageEnd
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(dnj; page: 12 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 12
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
61 741.06 m 4 22.91 (page )D
83.91 h 1 11 (12)D
97.66 h 3 17 (/ 14)D
end
%%QRKPageEnd
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(dnj; page: 13 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 13
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
473.33 741.06 m 4 22.91 (page )D
496.25 h 1 11 (13)D
510 h 3 17 (/ 14)D
63.5 29.56 m 4 26.58 (name:)D
.5 o
18.25 60.25 46.93 527.75 F rc n
end
%%QRKPageEnd
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(dnj; page: 14 of 14)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1 G
0 0 0 0 rF
0 0 :M
%%QRKPageBegin: 14
QuarkXPress_3.31 begin
F/ss X 1 1 pen 0 H 0 b
(0 0 768 588 initclip F rc u)kp
xpbu 60 45 sp0 -1 F xpscrn
calcbnd
xpbn
0 H
2 11 11 f
61 741.06 m 4 22.91 (page )D
83.91 h 1 11 (14)D
97.66 h 3 17 (/ 14)D
end
%%QRKPageEnd
endp
%%Trailer
end
%%EOF
